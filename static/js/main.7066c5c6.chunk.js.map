{"version":3,"sources":["useLocalStorage.tsx","App.tsx","components/Login/Login.tsx","components/Register/Register.tsx","components/Dashboard/Dashboard.tsx","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","window","item","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","console","log","App","email","setEmail","password","setPassword","isAuthorized","setIsAuthorized","title","login","data","setData","style","borderBottom","paddingBottom","to","context","Login","myEmail","myPassword","navigate","useNavigate","Form","onSubmit","event","realEmail","realPassword","preventDefault","Group","className","controlId","Label","Control","type","placeholder","onChange","e","target","Button","variant","Register","useOutletContext","Dashboard","setType","Row","as","Col","onClick","Root","path","element","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7066c5c6.chunk.js","sourcesContent":["import { useState } from 'react';\n\n// Hook\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport default function useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore\n      = value instanceof Function ? value(storedValue) : value;\n      // Save state\n\n      setStoredValue(valueToStore);\n      // Save to local storage\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue] as const;\n}\n","import './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Outlet } from 'react-router-dom';\nimport useLocalStorage from './useLocalStorage';\n\nexport default function App() {\n  const [email, setEmail] = useLocalStorage<string>('email', '');\n  const [password, setPassword] = useLocalStorage<string>('password', '');\n  const [isAuthorized, setIsAuthorized]\n    = useLocalStorage<boolean>('isAuthorized', false);\n  const [data, setData] = useLocalStorage<Data[]>('data', [{\n    title: '',\n    login: '',\n    password: '',\n  }]);\n\n  return (\n    <div>\n      <h1>Passwords manager</h1>\n      <nav\n        style={{\n          borderBottom: 'solid 1px',\n          paddingBottom: '1rem',\n        }}\n      >\n        {(isAuthorized) || (\n          <>\n            <Link to=\"/login\">Login</Link>\n            {' | '}\n            <Link to=\"/register\">Register</Link>\n          </>\n        )}\n      </nav>\n      <Outlet context={\n        {\n          email,\n          setEmail,\n          password,\n          setPassword,\n          data,\n          setData,\n          isAuthorized,\n          setIsAuthorized,\n        }\n      }\n      />\n    </div>\n  );\n}\n","import { Form, Button } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nexport default function Login() {\n  const [myEmail, setEmail] = useState('');\n  const [myPassword, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    const realEmail = JSON.parse(window.localStorage.getItem('email') || '');\n    const realPassword = JSON\n      .parse(window.localStorage.getItem('password') || '');\n\n    event.preventDefault();\n\n    if (realEmail === myEmail && realPassword === myPassword) {\n      navigate('/dashboard');\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(realEmail, myEmail, realPassword, myPassword);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Login\n      </Button>\n    </Form>\n  );\n}\n","import { Form, Button } from 'react-bootstrap';\nimport { useNavigate, useOutletContext } from 'react-router-dom';\n\ntype ContextType = {\n  setEmail: React.Dispatch<React.SetStateAction<string>>,\n  setPassword: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport default function Register() {\n  const { setEmail, setPassword } = useOutletContext<ContextType>();\n  const navigate = useNavigate();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    navigate('/login');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Enter your email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Create a password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Form.Group>\n\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n      >\n        Register me\n      </Button>\n    </Form>\n  );\n}\n","import {\n  Form,\n  Button,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { useState } from 'react';\n\nexport default function Dashboard() {\n  const [type, setType] = useState('password');\n\n  const handleClick = () => {\n    if (type === 'password') {\n      setType('text');\n    } else {\n      setType('password');\n    }\n  };\n\n  return (\n    <Form>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} controlId=\"formGridAddress1\">\n          <Form.Label>Service</Form.Label>\n          <Form.Control placeholder=\"Describe what service this data is for\" />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Login</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter login\" />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Enter password</Form.Label>\n          <Form.Control type={type} placeholder=\"Password\" />\n          <Button\n            variant=\"info\"\n            type=\"button\"\n            onClick={handleClick}\n          >\n            Show password\n          </Button>\n        </Form.Group>\n      </Row>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Add more\n      </Button>\n    </Form>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst Root = () => (\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"register\" element={<Register />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"dashboard\" element={<Dashboard />} />\n        <Route\n          path=\"*\"\n          element={(\n            <main style={{ padding: '1rem' }}>\n              <p>There is nothing here!</p>\n            </main>\n          )}\n        />\n      </Route>\n    </Routes>\n  </BrowserRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}