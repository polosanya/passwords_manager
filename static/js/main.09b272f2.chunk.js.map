{"version":3,"sources":["useLocalStorage.tsx","App.tsx","components/Login/Login.tsx","components/Register/Register.tsx","components/Content/Content.tsx","components/Dashboard/Dashboard.tsx","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","window","item","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","console","log","App","email","setEmail","password","setPassword","navigate","useNavigate","isAuthorized","setIsAuthorized","id","title","login","data","setData","className","Button","variant","onClick","context","Login","myEmail","setMyEmail","myPassword","setMyPassword","useOutletContext","Form","onSubmit","event","realEmail","realPassword","preventDefault","alert","Group","controlId","Label","Control","type","placeholder","onChange","e","target","Register","Password","setType","currentItem","find","obj","Row","as","Col","newData","splice","map","newItem","indexOf","Dashboard","length","Root","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09b272f2.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore\n      = value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue] as const;\n}\n","import './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport useLocalStorage from './useLocalStorage';\n\nexport default function App() {\n  const [email, setEmail] = useLocalStorage<string>('email', '');\n  const [password, setPassword] = useLocalStorage<string>('password', '');\n  const navigate = useNavigate();\n  const [isAuthorized, setIsAuthorized]\n    = useLocalStorage<boolean>('isAuthorized', false);\n  const [data, setData] = useLocalStorage<Data[]>('data', [{\n    id: 1,\n    title: '',\n    login: '',\n    password: '',\n  }]);\n\n  const goToLogin = () => {\n    navigate('/login');\n  };\n\n  const goToRegister = () => {\n    navigate('/register');\n  };\n\n  const goToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <div>\n      <h1 className=\"App__title\">Passwords manager</h1>\n      {(isAuthorized) ? (\n        <Button\n          variant=\"light\"\n          onClick={goToDashboard}\n          className=\"App__dashboard\"\n        >\n          Dashboard\n        </Button>\n      ) : (\n        <div className=\"App__authorization\">\n          <Button\n            variant=\"primary\"\n            onClick={goToLogin}\n          >\n            Log in\n          </Button>\n\n          <Button\n            variant=\"primary\"\n            onClick={goToRegister}\n          >\n            Sign up\n          </Button>\n        </div>\n      )}\n\n      <Outlet context={\n        {\n          email,\n          setEmail,\n          password,\n          setPassword,\n          data,\n          setData,\n          isAuthorized,\n          setIsAuthorized,\n        }\n      }\n      />\n    </div>\n  );\n}\n","import { Form, Button } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useNavigate, useOutletContext } from 'react-router-dom';\nimport './Login.scss';\n\ntype ContextType = {\n  isAuthorized: boolean,\n  setIsAuthorized: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport default function Login() {\n  const [myEmail, setMyEmail] = useState('');\n  const [myPassword, setMyPassword] = useState('');\n  const navigate = useNavigate();\n  const { isAuthorized, setIsAuthorized } = useOutletContext<ContextType>();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    const realEmail = JSON.parse(window.localStorage.getItem('email') || '');\n    const realPassword = JSON\n      .parse(window.localStorage.getItem('password') || '');\n\n    event.preventDefault();\n\n    if (realEmail === myEmail && realPassword === myPassword) {\n      setIsAuthorized(!isAuthorized);\n      navigate('/dashboard');\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('Wrong email or password');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={(e) => setMyEmail(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setMyPassword(e.target.value)}\n        />\n      </Form.Group>\n\n      <Button variant=\"success\" type=\"submit\">\n        Log in\n      </Button>\n    </Form>\n  );\n}\n","import { Form, Button } from 'react-bootstrap';\nimport { useNavigate, useOutletContext } from 'react-router-dom';\n\ntype ContextType = {\n  setEmail: React.Dispatch<React.SetStateAction<string>>,\n  setPassword: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport default function Register() {\n  const { setEmail, setPassword } = useOutletContext<ContextType>();\n  const navigate = useNavigate();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    navigate('/login');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Enter your email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Create a password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Form.Group>\n\n      <Button\n        variant=\"success\"\n        type=\"submit\"\n      >\n        Sign up\n      </Button>\n    </Form>\n  );\n}\n","import {\n  Form,\n  Button,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport './Content.scss';\nimport { useOutletContext } from 'react-router-dom';\nimport { useState } from 'react';\n\ntype Props = {\n  item: Data;\n};\n\ntype ContextType = {\n  data: Data[],\n  setData: React.Dispatch<React.SetStateAction<Data[]>>,\n};\n\nconst Password: React.FC<Props> = ({ item }) => {\n  const [type, setType] = useState('password');\n  const { data, setData } = useOutletContext<ContextType>();\n  const { id } = item;\n\n  const currentItem = data.find((obj: Data) => (obj.id === id)) || data[0];\n\n  const showPassword = () => {\n    if (type === 'password') {\n      setType('text');\n    } else {\n      setType('password');\n    }\n  };\n\n  const deleteItem = () => {\n    const newData = [...data];\n\n    newData.splice(id - 1, 1);\n\n    newData.map(newItem => {\n      // eslint-disable-next-line no-param-reassign\n      newItem.id = newData.indexOf(newItem) + 1;\n\n      return newItem;\n    });\n\n    setData(newData);\n  };\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (currentItem) {\n      currentItem.title = event.target.value;\n\n      const newData = [...data];\n\n      newData.splice(id - 1, 1, currentItem);\n\n      setData(newData);\n    }\n  };\n\n  const changeLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (currentItem) {\n      currentItem.login = event.target.value;\n\n      const newData = [...data];\n\n      newData.splice(id - 1, 1, currentItem);\n\n      setData(newData);\n    }\n  };\n\n  const changePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (currentItem) {\n      currentItem.password = event.target.value;\n\n      const newData = [...data];\n\n      newData.splice(id - 1, 1, currentItem);\n\n      setData(newData);\n    }\n  };\n\n  return (\n    <Form>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} controlId=\"formGridAddress1\">\n          <Form.Label>Service</Form.Label>\n          <Form.Control\n            placeholder=\"Describe what service this data is for\"\n            value={currentItem.title}\n            onChange={changeTitle}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridEmail\">\n          <Form.Label>Login</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter login\"\n            value={currentItem.login}\n            onChange={changeLogin}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formGridPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={type}\n            placeholder=\"Enter password\"\n            value={currentItem.password}\n            onChange={changePassword}\n          />\n          <div className=\"Content__control\">\n            <Button\n              variant=\"warning\"\n              type=\"button\"\n              onClick={showPassword}\n            >\n              Show password\n            </Button>\n\n            <Button\n              variant=\"danger\"\n              onClick={deleteItem}\n            >\n              X\n            </Button>\n          </div>\n        </Form.Group>\n      </Row>\n    </Form>\n  );\n};\n\nexport default Password;\n","import './Dashboard.scss';\nimport { useOutletContext } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Content from '../Content/Content';\n\ntype ContextType = {\n  data: Data[],\n  setData: React.Dispatch<React.SetStateAction<Data[]>>,\n};\n\nexport default function Dashboard() {\n  const { data, setData } = useOutletContext<ContextType>();\n\n  const handleClick = () => {\n    const newItem: Data = {\n      id: data.length + 1,\n      title: '',\n      password: '',\n      login: '',\n    };\n\n    setData([...data, newItem]);\n  };\n\n  return (\n    <div>\n      {data.map(item => (\n        <Content item={item} />\n      ))}\n\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={handleClick}\n        className=\"Dashboard__add\"\n      >\n        Add more\n      </Button>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"*\" element={<App />}>\n        <Route path=\"register\" element={<Register />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"dashboard\" element={<Dashboard />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}